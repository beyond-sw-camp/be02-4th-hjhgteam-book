pipeline {
    agent any

    stages {
        stage('git clone') {
            steps {
                git branch: 'master', url: 'https://github.com/Hyeon-Kyun/backtest'
            }
        }

        stage('Build') {
            steps {
                script {
                    sh 'mvn package'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    withCredentials([
                        usernamePassword(credentialsId: 'dockerjenkins', usernameVariable: 'DOCKERID', passwordVariable: 'DOCKERPW')
                    ]) {
                        def dockerImage = "kimhyeonkyun123/backk8sjenkins:1.${BUILD_NUMBER}"

                        sh "docker build -t $dockerImage ."
                        sh "docker login -u $DOCKERID -p $DOCKERPW"
                        sh "docker push $dockerImage"

                    }
                }
            }
        }

        stage('SSH Transfer and Kubernetes Deployment') {
            steps {
                script {
                    sshPublisher(
                        continueOnError: false, 
                        failOnError: true,
                        publishers: [
                            sshPublisherDesc(
                                configName: 'jenkins',
                                verbose: true,
                                transfers: [
                                    sshTransfer(
                                        sourceFiles: 'back-deployment.yml',
                                        remoteDirectory: '/root/',
                                        execCommand: 'sed -i "s/VERSION/$BUILD_NUMBER/g" /root/back-deployment.yml'
                                    ),
                                    sshTransfer(
                                        execCommand: 'kubectl apply -f /root/back-deployment.yml'
                                    )
                                ]
                            )
                        ]
                    )
                }
            }
        }
    }

}